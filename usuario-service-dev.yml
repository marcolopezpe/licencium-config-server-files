server:
  port: ${CUSTOM.SERVER.PORT:8001}

encrypt:
  key: ${ENCRYPT.KEY:licencium-secret-key}

spring:
  application:
    name: usuario-service
  datasource:
    url: '{cipher}8512df92b5dd3a1b01aa449cb2957cea3e786e742372891ea5b811f36f1da5868a473ec25066afdf11a67251a1d5b248d2f65fe3349194e42f2fca1bf75b43d1'
    username: '{cipher}a22e6e73f963941d1ff3b5feed48da91c712e82696bd5d9c028945b66c5743b6'
    password: '{cipher}d2cb3b3df2613e6a92b7621c51855773a52ce99b3dedc2e14d025cc1fd2b6dee'
    driver-class-name: '{cipher}fa6fa36e44df9ba10d99b650f840f437a9b2cf9976a1ff8b1c753acd56d8902370d5dd89c6c1a16278aadd26844ae39b'
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topic:
      name: usuario_topics

management:
  auditevents:
    enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
  endpoint:
    health:
      group:
        custom:
          include: diskSpace, ping, memory, mem
          show-component: always
          show-details: always
  info:
    env:
      enabled: true
  health:
    env:
      enabled: true
